{

  "schema": "{\r\n  \"type\":\"record\",\r\n  \"namespace\": \"io.confluent.kafka.schemaregistry.rules\",\r\n  \"name\":\"Customer\",\r\n  \"fields\":[\r\n    {\"name\":\"ssn\",\"type\":\"string\",\"confluent:tags\":[\"PII\"]},\r\n    {\"name\":\"address\",\"type\":\"string\"},\r\n    {\"name\":\"mail\",\"type\":\"string\"},\r\n    {\"name\":\"user_id\",\"type\":\"string\"},\r\n    {\"name\":\"age\",\"type\":\"int\"},\r\n    {\"name\":\"IBAN\",\"type\":\"string\"},\r\n    {\"name\":\"active\",\"type\":\"boolean\"},\r\n    {\"name\":\"balance\",\"type\":\"float\"},\r\n    {\"name\":\"mode\",\"type\":\"string\"}\n    ]\r\n}",
  "ruleSet": {
    "domainRules": [
      {
        "name": "checkSSN",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "expr": "size(message.ssn) == 9",
        "onFailure": "ERROR",
        "disabled": false
      },
      {
        "name": "checkAddress",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "expr": "message.address.matches(r\"#\\d+ ([^,]+), ([A-Z]{2}) (\\d{5})\")",
        "onFailure": "ERROR",
        "disabled": false
      },
      {
        "name": "checkEmail",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "expr": "message.mail.contains(\"@\")",
        "onFailure": "ERROR",
        "disabled": false
      },
      {
        "name": "checkUserId",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "expr": "message.user_id.startsWith(\"uid_\")",
        "onFailure": "ERROR",
        "disabled": false
      },
      {
        "name": "checkAge",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "expr": "message.age > 18",
        "onFailure": "ERROR",
        "disabled": false
      },
      {
        "name": "checkIBAN",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "expr": "message.IBAN.matches(r\"^([A-Z]{2}[ '+'\\\\'+'-]?[0-9]{2})(?=(?:[ '+'\\\\'+'-]?[A-Z0-9]){9,30}$)((?:[ '+'\\\\'+'-]?[A-Z0-9]{3,5}){2,7})([ '+'\\\\'+'-]?[A-Z0-9]{1,3})?$\")",
        "onFailure": "ERROR",
        "disabled": false
      },
      {
        "name": "checkActive",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "params": { "dlq.topic": "DLQ1" },
        "expr": "message.active",
        "onFailure": "DLQ",
        "disabled": false
      },
      {
        "name": "checkBalance",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "expr": "message.balance >= 0.0",
        "onFailure": "ERROR",
        "disabled": false
      },
      {
        "name": "changeUserId",
        "kind": "TRANSFORM",
        "mode": "WRITE",
        "type": "CEL_FIELD",
        "expr": "name == 'user_id' ; value == \"Confluent\" ? value : \"Confluent\""
      },
      {
        "name": "checkModeWrite",
        "kind": "CONDITION",
        "mode": "WRITE",
        "type": "CEL",
        "params": { "dlq.topic": "DLQ2" },
        "expr": "message.mode != 'fail_write'",
        "onFailure": "DLQ",
        "disabled": false
      },
      {
        "name": "checkModeRead",
        "kind": "CONDITION",
        "mode": "READ",
        "type": "CEL",
        "params": { "dlq.topic": "DLQ3" },
        "expr": "message.mode != 'fail_read'",
        "onFailure": "DLQ",
        "disabled": false
      }
    ]
  }
}
