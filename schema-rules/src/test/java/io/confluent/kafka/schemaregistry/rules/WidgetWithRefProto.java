// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: WidgetWithRef.proto
// Protobuf Java Version: 4.29.3

package io.confluent.kafka.schemaregistry.rules;

public final class WidgetWithRefProto {
  private WidgetWithRefProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      WidgetWithRefProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code io.confluent.kafka.schemaregistry.rules.widgetref.Kind}
   */
  public enum Kind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ZERO = 0;</code>
     */
    ZERO(0),
    /**
     * <code>ONE = 1;</code>
     */
    ONE(1),
    /**
     * <code>TWO = 2;</code>
     */
    TWO(2),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        Kind.class.getName());
    }
    /**
     * <code>ZERO = 0;</code>
     */
    public static final int ZERO_VALUE = 0;
    /**
     * <code>ONE = 1;</code>
     */
    public static final int ONE_VALUE = 1;
    /**
     * <code>TWO = 2;</code>
     */
    public static final int TWO_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Kind valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Kind forNumber(int value) {
      switch (value) {
        case 0: return ZERO;
        case 1: return ONE;
        case 2: return TWO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Kind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Kind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
            public Kind findValueByNumber(int number) {
              return Kind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Kind[] VALUES = values();

    public static Kind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Kind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.confluent.kafka.schemaregistry.rules.widgetref.Kind)
  }

  public interface WidgetWithRefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.confluent.kafka.schemaregistry.rules.widgetref.WidgetWithRef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>string lastName = 2;</code>
     * @return The lastName.
     */
    java.lang.String getLastName();
    /**
     * <code>string lastName = 2;</code>
     * @return The bytes for lastName.
     */
    com.google.protobuf.ByteString
        getLastNameBytes();

    /**
     * <code>string fullName = 3;</code>
     * @return The fullName.
     */
    java.lang.String getFullName();
    /**
     * <code>string fullName = 3;</code>
     * @return The bytes for fullName.
     */
    com.google.protobuf.ByteString
        getFullNameBytes();

    /**
     * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
     * @return The enum numeric value on the wire for kind.
     */
    int getKindValue();
    /**
     * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
     * @return The kind.
     */
    io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind getKind();

    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @return A list containing the ssn.
     */
    java.util.List<java.lang.String>
        getSsnList();
    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @return The count of ssn.
     */
    int getSsnCount();
    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the element to return.
     * @return The ssn at the given index.
     */
    java.lang.String getSsn(int index);
    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the value to return.
     * @return The bytes of the ssn at the given index.
     */
    com.google.protobuf.ByteString
        getSsnBytes(int index);

    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    java.util.List<io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> 
        getPiiArrayList();
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiArray(int index);
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    int getPiiArrayCount();
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    java.util.List<? extends io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> 
        getPiiArrayOrBuilderList();
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder getPiiArrayOrBuilder(
        int index);

    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    int getPiiMapCount();
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    boolean containsPiiMap(
        java.lang.String key);
    /**
     * Use {@link #getPiiMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>
    getPiiMap();
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>
    getPiiMapMap();
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    /* nullable */
io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiMapOrDefault(
        java.lang.String key,
        /* nullable */
io.confluent.kafka.schemaregistry.rules.PiiProto.Pii defaultValue);
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiMapOrThrow(
        java.lang.String key);

    /**
     * <code>int32 size = 8;</code>
     * @return The size.
     */
    int getSize();

    /**
     * <code>int32 version = 9;</code>
     * @return The version.
     */
    int getVersion();
  }
  /**
   * Protobuf type {@code io.confluent.kafka.schemaregistry.rules.widgetref.WidgetWithRef}
   */
  public static final class WidgetWithRef extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:io.confluent.kafka.schemaregistry.rules.widgetref.WidgetWithRef)
      WidgetWithRefOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        WidgetWithRef.class.getName());
    }
    // Use WidgetWithRef.newBuilder() to construct.
    private WidgetWithRef(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private WidgetWithRef() {
      name_ = "";
      lastName_ = "";
      fullName_ = "";
      kind_ = 0;
      ssn_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      piiArray_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 7:
          return internalGetPiiMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef.class, io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTNAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object lastName_ = "";
    /**
     * <code>string lastName = 2;</code>
     * @return The lastName.
     */
    @java.lang.Override
    public java.lang.String getLastName() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastName_ = s;
        return s;
      }
    }
    /**
     * <code>string lastName = 2;</code>
     * @return The bytes for lastName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastNameBytes() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FULLNAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object fullName_ = "";
    /**
     * <code>string fullName = 3;</code>
     * @return The fullName.
     */
    @java.lang.Override
    public java.lang.String getFullName() {
      java.lang.Object ref = fullName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fullName_ = s;
        return s;
      }
    }
    /**
     * <code>string fullName = 3;</code>
     * @return The bytes for fullName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFullNameBytes() {
      java.lang.Object ref = fullName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fullName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KIND_FIELD_NUMBER = 4;
    private int kind_ = 0;
    /**
     * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
     * @return The enum numeric value on the wire for kind.
     */
    @java.lang.Override public int getKindValue() {
      return kind_;
    }
    /**
     * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
     * @return The kind.
     */
    @java.lang.Override public io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind getKind() {
      io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind result = io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind.forNumber(kind_);
      return result == null ? io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind.UNRECOGNIZED : result;
    }

    public static final int SSN_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList ssn_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @return A list containing the ssn.
     */
    public com.google.protobuf.ProtocolStringList
        getSsnList() {
      return ssn_;
    }
    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @return The count of ssn.
     */
    public int getSsnCount() {
      return ssn_.size();
    }
    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the element to return.
     * @return The ssn at the given index.
     */
    public java.lang.String getSsn(int index) {
      return ssn_.get(index);
    }
    /**
     * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the value to return.
     * @return The bytes of the ssn at the given index.
     */
    public com.google.protobuf.ByteString
        getSsnBytes(int index) {
      return ssn_.getByteString(index);
    }

    public static final int PII_ARRAY_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> piiArray_;
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    @java.lang.Override
    public java.util.List<io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> getPiiArrayList() {
      return piiArray_;
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> 
        getPiiArrayOrBuilderList() {
      return piiArray_;
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    @java.lang.Override
    public int getPiiArrayCount() {
      return piiArray_.size();
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiArray(int index) {
      return piiArray_.get(index);
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
     */
    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder getPiiArrayOrBuilder(
        int index) {
      return piiArray_.get(index);
    }

    public static final int PII_MAP_FIELD_NUMBER = 7;
    private static final class PiiMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>newDefaultInstance(
                  io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_PiiMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> piiMap_;
    private com.google.protobuf.MapField<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>
    internalGetPiiMap() {
      if (piiMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PiiMapDefaultEntryHolder.defaultEntry);
      }
      return piiMap_;
    }
    public int getPiiMapCount() {
      return internalGetPiiMap().getMap().size();
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    @java.lang.Override
    public boolean containsPiiMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetPiiMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPiiMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> getPiiMap() {
      return getPiiMapMap();
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> getPiiMapMap() {
      return internalGetPiiMap().getMap();
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    @java.lang.Override
    public /* nullable */
io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiMapOrDefault(
        java.lang.String key,
        /* nullable */
io.confluent.kafka.schemaregistry.rules.PiiProto.Pii defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> map =
          internalGetPiiMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
     */
    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> map =
          internalGetPiiMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SIZE_FIELD_NUMBER = 8;
    private int size_ = 0;
    /**
     * <code>int32 size = 8;</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }

    public static final int VERSION_FIELD_NUMBER = 9;
    private int version_ = 0;
    /**
     * <code>int32 version = 9;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, lastName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fullName_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, fullName_);
      }
      if (kind_ != io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind.ZERO.getNumber()) {
        output.writeEnum(4, kind_);
      }
      for (int i = 0; i < ssn_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, ssn_.getRaw(i));
      }
      for (int i = 0; i < piiArray_.size(); i++) {
        output.writeMessage(6, piiArray_.get(i));
      }
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetPiiMap(),
          PiiMapDefaultEntryHolder.defaultEntry,
          7);
      if (size_ != 0) {
        output.writeInt32(8, size_);
      }
      if (version_ != 0) {
        output.writeInt32(9, version_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(lastName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, lastName_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(fullName_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, fullName_);
      }
      if (kind_ != io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind.ZERO.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, kind_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ssn_.size(); i++) {
          dataSize += computeStringSizeNoTag(ssn_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSsnList().size();
      }
      for (int i = 0; i < piiArray_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, piiArray_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> entry
           : internalGetPiiMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>
        piiMap__ = PiiMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, piiMap__);
      }
      if (size_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, size_);
      }
      if (version_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef)) {
        return super.equals(obj);
      }
      io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef other = (io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getLastName()
          .equals(other.getLastName())) return false;
      if (!getFullName()
          .equals(other.getFullName())) return false;
      if (kind_ != other.kind_) return false;
      if (!getSsnList()
          .equals(other.getSsnList())) return false;
      if (!getPiiArrayList()
          .equals(other.getPiiArrayList())) return false;
      if (!internalGetPiiMap().equals(
          other.internalGetPiiMap())) return false;
      if (getSize()
          != other.getSize()) return false;
      if (getVersion()
          != other.getVersion()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + LASTNAME_FIELD_NUMBER;
      hash = (53 * hash) + getLastName().hashCode();
      hash = (37 * hash) + FULLNAME_FIELD_NUMBER;
      hash = (53 * hash) + getFullName().hashCode();
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + kind_;
      if (getSsnCount() > 0) {
        hash = (37 * hash) + SSN_FIELD_NUMBER;
        hash = (53 * hash) + getSsnList().hashCode();
      }
      if (getPiiArrayCount() > 0) {
        hash = (37 * hash) + PII_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getPiiArrayList().hashCode();
      }
      if (!internalGetPiiMap().getMap().isEmpty()) {
        hash = (37 * hash) + PII_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPiiMap().hashCode();
      }
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getSize();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.confluent.kafka.schemaregistry.rules.widgetref.WidgetWithRef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.confluent.kafka.schemaregistry.rules.widgetref.WidgetWithRef)
        io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 7:
            return internalGetPiiMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutablePiiMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef.class, io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef.Builder.class);
      }

      // Construct using io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        lastName_ = "";
        fullName_ = "";
        kind_ = 0;
        ssn_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        if (piiArrayBuilder_ == null) {
          piiArray_ = java.util.Collections.emptyList();
        } else {
          piiArray_ = null;
          piiArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        internalGetMutablePiiMap().clear();
        size_ = 0;
        version_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_descriptor;
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef getDefaultInstanceForType() {
        return io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef.getDefaultInstance();
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef build() {
        io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef buildPartial() {
        io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef result = new io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef result) {
        if (piiArrayBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            piiArray_ = java.util.Collections.unmodifiableList(piiArray_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.piiArray_ = piiArray_;
        } else {
          result.piiArray_ = piiArrayBuilder_.build();
        }
      }

      private void buildPartial0(io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lastName_ = lastName_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.fullName_ = fullName_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.kind_ = kind_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          ssn_.makeImmutable();
          result.ssn_ = ssn_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.piiMap_ = internalGetPiiMap().build(PiiMapDefaultEntryHolder.defaultEntry);
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.size_ = size_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.version_ = version_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef) {
          return mergeFrom((io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef other) {
        if (other == io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getLastName().isEmpty()) {
          lastName_ = other.lastName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getFullName().isEmpty()) {
          fullName_ = other.fullName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.kind_ != 0) {
          setKindValue(other.getKindValue());
        }
        if (!other.ssn_.isEmpty()) {
          if (ssn_.isEmpty()) {
            ssn_ = other.ssn_;
            bitField0_ |= 0x00000010;
          } else {
            ensureSsnIsMutable();
            ssn_.addAll(other.ssn_);
          }
          onChanged();
        }
        if (piiArrayBuilder_ == null) {
          if (!other.piiArray_.isEmpty()) {
            if (piiArray_.isEmpty()) {
              piiArray_ = other.piiArray_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensurePiiArrayIsMutable();
              piiArray_.addAll(other.piiArray_);
            }
            onChanged();
          }
        } else {
          if (!other.piiArray_.isEmpty()) {
            if (piiArrayBuilder_.isEmpty()) {
              piiArrayBuilder_.dispose();
              piiArrayBuilder_ = null;
              piiArray_ = other.piiArray_;
              bitField0_ = (bitField0_ & ~0x00000020);
              piiArrayBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPiiArrayFieldBuilder() : null;
            } else {
              piiArrayBuilder_.addAllMessages(other.piiArray_);
            }
          }
        }
        internalGetMutablePiiMap().mergeFrom(
            other.internalGetPiiMap());
        bitField0_ |= 0x00000040;
        if (other.getSize() != 0) {
          setSize(other.getSize());
        }
        if (other.getVersion() != 0) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                lastName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                fullName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                kind_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureSsnIsMutable();
                ssn_.add(s);
                break;
              } // case 42
              case 50: {
                io.confluent.kafka.schemaregistry.rules.PiiProto.Pii m =
                    input.readMessage(
                        io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.parser(),
                        extensionRegistry);
                if (piiArrayBuilder_ == null) {
                  ensurePiiArrayIsMutable();
                  piiArray_.add(m);
                } else {
                  piiArrayBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 58: {
                com.google.protobuf.MapEntry<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>
                piiMap__ = input.readMessage(
                    PiiMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutablePiiMap().ensureBuilderMap().put(
                    piiMap__.getKey(), piiMap__.getValue());
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 64: {
                size_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                version_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object lastName_ = "";
      /**
       * <code>string lastName = 2;</code>
       * @return The lastName.
       */
      public java.lang.String getLastName() {
        java.lang.Object ref = lastName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lastName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string lastName = 2;</code>
       * @return The bytes for lastName.
       */
      public com.google.protobuf.ByteString
          getLastNameBytes() {
        java.lang.Object ref = lastName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string lastName = 2;</code>
       * @param value The lastName to set.
       * @return This builder for chaining.
       */
      public Builder setLastName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        lastName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string lastName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastName() {
        lastName_ = getDefaultInstance().getLastName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string lastName = 2;</code>
       * @param value The bytes for lastName to set.
       * @return This builder for chaining.
       */
      public Builder setLastNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        lastName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object fullName_ = "";
      /**
       * <code>string fullName = 3;</code>
       * @return The fullName.
       */
      public java.lang.String getFullName() {
        java.lang.Object ref = fullName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fullName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fullName = 3;</code>
       * @return The bytes for fullName.
       */
      public com.google.protobuf.ByteString
          getFullNameBytes() {
        java.lang.Object ref = fullName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fullName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fullName = 3;</code>
       * @param value The fullName to set.
       * @return This builder for chaining.
       */
      public Builder setFullName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        fullName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string fullName = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFullName() {
        fullName_ = getDefaultInstance().getFullName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string fullName = 3;</code>
       * @param value The bytes for fullName to set.
       * @return This builder for chaining.
       */
      public Builder setFullNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        fullName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int kind_ = 0;
      /**
       * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
       * @return The enum numeric value on the wire for kind.
       */
      @java.lang.Override public int getKindValue() {
        return kind_;
      }
      /**
       * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
       * @param value The enum numeric value on the wire for kind to set.
       * @return This builder for chaining.
       */
      public Builder setKindValue(int value) {
        kind_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
       * @return The kind.
       */
      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind getKind() {
        io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind result = io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind.forNumber(kind_);
        return result == null ? io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind.UNRECOGNIZED : result;
      }
      /**
       * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.io.confluent.kafka.schemaregistry.rules.widgetref.Kind kind = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000008);
        kind_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList ssn_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureSsnIsMutable() {
        if (!ssn_.isModifiable()) {
          ssn_ = new com.google.protobuf.LazyStringArrayList(ssn_);
        }
        bitField0_ |= 0x00000010;
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @return A list containing the ssn.
       */
      public com.google.protobuf.ProtocolStringList
          getSsnList() {
        ssn_.makeImmutable();
        return ssn_;
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @return The count of ssn.
       */
      public int getSsnCount() {
        return ssn_.size();
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @param index The index of the element to return.
       * @return The ssn at the given index.
       */
      public java.lang.String getSsn(int index) {
        return ssn_.get(index);
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @param index The index of the value to return.
       * @return The bytes of the ssn at the given index.
       */
      public com.google.protobuf.ByteString
          getSsnBytes(int index) {
        return ssn_.getByteString(index);
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @param index The index to set the value at.
       * @param value The ssn to set.
       * @return This builder for chaining.
       */
      public Builder setSsn(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSsnIsMutable();
        ssn_.set(index, value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @param value The ssn to add.
       * @return This builder for chaining.
       */
      public Builder addSsn(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureSsnIsMutable();
        ssn_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @param values The ssn to add.
       * @return This builder for chaining.
       */
      public Builder addAllSsn(
          java.lang.Iterable<java.lang.String> values) {
        ensureSsnIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ssn_);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearSsn() {
        ssn_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 5 [(.confluent.field_meta) = { ... }</code>
       * @param value The bytes of the ssn to add.
       * @return This builder for chaining.
       */
      public Builder addSsnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureSsnIsMutable();
        ssn_.add(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.util.List<io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> piiArray_ =
        java.util.Collections.emptyList();
      private void ensurePiiArrayIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          piiArray_ = new java.util.ArrayList<io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>(piiArray_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.confluent.kafka.schemaregistry.rules.PiiProto.Pii, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> piiArrayBuilder_;

      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public java.util.List<io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> getPiiArrayList() {
        if (piiArrayBuilder_ == null) {
          return java.util.Collections.unmodifiableList(piiArray_);
        } else {
          return piiArrayBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public int getPiiArrayCount() {
        if (piiArrayBuilder_ == null) {
          return piiArray_.size();
        } else {
          return piiArrayBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiArray(int index) {
        if (piiArrayBuilder_ == null) {
          return piiArray_.get(index);
        } else {
          return piiArrayBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder setPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii value) {
        if (piiArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiiArrayIsMutable();
          piiArray_.set(index, value);
          onChanged();
        } else {
          piiArrayBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder setPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder builderForValue) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.set(index, builderForValue.build());
          onChanged();
        } else {
          piiArrayBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder addPiiArray(io.confluent.kafka.schemaregistry.rules.PiiProto.Pii value) {
        if (piiArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiiArrayIsMutable();
          piiArray_.add(value);
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder addPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii value) {
        if (piiArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiiArrayIsMutable();
          piiArray_.add(index, value);
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder addPiiArray(
          io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder builderForValue) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.add(builderForValue.build());
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder addPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder builderForValue) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.add(index, builderForValue.build());
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder addAllPiiArray(
          java.lang.Iterable<? extends io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> values) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, piiArray_);
          onChanged();
        } else {
          piiArrayBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder clearPiiArray() {
        if (piiArrayBuilder_ == null) {
          piiArray_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          piiArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public Builder removePiiArray(int index) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.remove(index);
          onChanged();
        } else {
          piiArrayBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder getPiiArrayBuilder(
          int index) {
        return getPiiArrayFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder getPiiArrayOrBuilder(
          int index) {
        if (piiArrayBuilder_ == null) {
          return piiArray_.get(index);  } else {
          return piiArrayBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public java.util.List<? extends io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> 
           getPiiArrayOrBuilderList() {
        if (piiArrayBuilder_ != null) {
          return piiArrayBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(piiArray_);
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder addPiiArrayBuilder() {
        return getPiiArrayFieldBuilder().addBuilder(
            io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.getDefaultInstance());
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder addPiiArrayBuilder(
          int index) {
        return getPiiArrayFieldBuilder().addBuilder(
            index, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.getDefaultInstance());
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 6;</code>
       */
      public java.util.List<io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder> 
           getPiiArrayBuilderList() {
        return getPiiArrayFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.confluent.kafka.schemaregistry.rules.PiiProto.Pii, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> 
          getPiiArrayFieldBuilder() {
        if (piiArrayBuilder_ == null) {
          piiArrayBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.confluent.kafka.schemaregistry.rules.PiiProto.Pii, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder>(
                  piiArray_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          piiArray_ = null;
        }
        return piiArrayBuilder_;
      }

      private static final class PiiMapConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> {
        @java.lang.Override
        public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii build(io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder val) {
          if (val instanceof io.confluent.kafka.schemaregistry.rules.PiiProto.Pii) { return (io.confluent.kafka.schemaregistry.rules.PiiProto.Pii) val; }
          return ((io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> defaultEntry() {
          return PiiMapDefaultEntryHolder.defaultEntry;
        }
      };
      private static final PiiMapConverter piiMapConverter = new PiiMapConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder> piiMap_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder>
          internalGetPiiMap() {
        if (piiMap_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(piiMapConverter);
        }
        return piiMap_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder>
          internalGetMutablePiiMap() {
        if (piiMap_ == null) {
          piiMap_ = new com.google.protobuf.MapFieldBuilder<>(piiMapConverter);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return piiMap_;
      }
      public int getPiiMapCount() {
        return internalGetPiiMap().ensureBuilderMap().size();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      @java.lang.Override
      public boolean containsPiiMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetPiiMap().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getPiiMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> getPiiMap() {
        return getPiiMapMap();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> getPiiMapMap() {
        return internalGetPiiMap().getImmutableMap();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      @java.lang.Override
      public /* nullable */
io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiMapOrDefault(
          java.lang.String key,
          /* nullable */
io.confluent.kafka.schemaregistry.rules.PiiProto.Pii defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> map = internalGetMutablePiiMap().ensureBuilderMap();
        return map.containsKey(key) ? piiMapConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii getPiiMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> map = internalGetMutablePiiMap().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return piiMapConverter.build(map.get(key));
      }
      public Builder clearPiiMap() {
        bitField0_ = (bitField0_ & ~0x00000040);
        internalGetMutablePiiMap().clear();
        return this;
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      public Builder removePiiMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutablePiiMap().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii>
          getMutablePiiMap() {
        bitField0_ |= 0x00000040;
        return internalGetMutablePiiMap().ensureMessageMap();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      public Builder putPiiMap(
          java.lang.String key,
          io.confluent.kafka.schemaregistry.rules.PiiProto.Pii value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutablePiiMap().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      public Builder putAllPiiMap(
          java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> values) {
        for (java.util.Map.Entry<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.Pii> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutablePiiMap().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 7;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder putPiiMapBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder> builderMap = internalGetMutablePiiMap().ensureBuilderMap();
        io.confluent.kafka.schemaregistry.rules.PiiProto.PiiOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof io.confluent.kafka.schemaregistry.rules.PiiProto.Pii) {
          entry = ((io.confluent.kafka.schemaregistry.rules.PiiProto.Pii) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (io.confluent.kafka.schemaregistry.rules.PiiProto.Pii.Builder) entry;
      }

      private int size_ ;
      /**
       * <code>int32 size = 8;</code>
       * @return The size.
       */
      @java.lang.Override
      public int getSize() {
        return size_;
      }
      /**
       * <code>int32 size = 8;</code>
       * @param value The size to set.
       * @return This builder for chaining.
       */
      public Builder setSize(int value) {

        size_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>int32 size = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000080);
        size_ = 0;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <code>int32 version = 9;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <code>int32 version = 9;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {

        version_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int32 version = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000100);
        version_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:io.confluent.kafka.schemaregistry.rules.widgetref.WidgetWithRef)
    }

    // @@protoc_insertion_point(class_scope:io.confluent.kafka.schemaregistry.rules.widgetref.WidgetWithRef)
    private static final io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef();
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WidgetWithRef>
        PARSER = new com.google.protobuf.AbstractParser<WidgetWithRef>() {
      @java.lang.Override
      public WidgetWithRef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WidgetWithRef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WidgetWithRef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.WidgetWithRefProto.WidgetWithRef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_PiiMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_PiiMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023WidgetWithRef.proto\0221io.confluent.kafk" +
      "a.schemaregistry.rules.widgetref\032\024conflu" +
      "ent/meta.proto\032\tPii.proto\"\326\003\n\rWidgetWith" +
      "Ref\022\036\n\004name\030\001 \001(\tB\020\202D\r\032\003PII\032\006PUBLIC\022\020\n\010l" +
      "astName\030\002 \001(\t\022\020\n\010fullName\030\003 \001(\t\022E\n\004kind\030" +
      "\004 \001(\01627.io.confluent.kafka.schemaregistr" +
      "y.rules.widgetref.Kind\022\036\n\003ssn\030\005 \003(\tB\021\202D\016" +
      "\032\003PII\032\007PRIVATE\022?\n\tpii_array\030\006 \003(\0132,.io.c" +
      "onfluent.kafka.schemaregistry.rules.Pii\022" +
      "]\n\007pii_map\030\007 \003(\0132L.io.confluent.kafka.sc" +
      "hemaregistry.rules.widgetref.WidgetWithR" +
      "ef.PiiMapEntry\022\014\n\004size\030\010 \001(\005\022\017\n\007version\030" +
      "\t \001(\005\032[\n\013PiiMapEntry\022\013\n\003key\030\001 \001(\t\022;\n\005val" +
      "ue\030\002 \001(\0132,.io.confluent.kafka.schemaregi" +
      "stry.rules.Pii:\0028\001*\"\n\004Kind\022\010\n\004ZERO\020\000\022\007\n\003" +
      "ONE\020\001\022\007\n\003TWO\020\002B?\n\'io.confluent.kafka.sch" +
      "emaregistry.rulesB\022WidgetWithRefProtoP\000b" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.confluent.protobuf.MetaProto.getDescriptor(),
          io.confluent.kafka.schemaregistry.rules.PiiProto.getDescriptor(),
        });
    internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_descriptor,
        new java.lang.String[] { "Name", "LastName", "FullName", "Kind", "Ssn", "PiiArray", "PiiMap", "Size", "Version", });
    internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_PiiMapEntry_descriptor =
      internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_descriptor.getNestedTypes().get(0);
    internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_PiiMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_io_confluent_kafka_schemaregistry_rules_widgetref_WidgetWithRef_PiiMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    descriptor.resolveAllFeaturesImmutable();
    io.confluent.protobuf.MetaProto.getDescriptor();
    io.confluent.kafka.schemaregistry.rules.PiiProto.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.confluent.protobuf.MetaProto.fieldMeta);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
