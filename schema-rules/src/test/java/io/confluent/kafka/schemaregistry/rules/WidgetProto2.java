// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Widget2.proto

package io.confluent.kafka.schemaregistry.rules;

public final class WidgetProto2 {
  private WidgetProto2() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code io.confluent.kafka.schemaregistry.rules.Kind}
   */
  public enum Kind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ZERO = 0;</code>
     */
    ZERO(0),
    /**
     * <code>ONE = 1;</code>
     */
    ONE(1),
    /**
     * <code>TWO = 2;</code>
     */
    TWO(2),
    ;

    /**
     * <code>ZERO = 0;</code>
     */
    public static final int ZERO_VALUE = 0;
    /**
     * <code>ONE = 1;</code>
     */
    public static final int ONE_VALUE = 1;
    /**
     * <code>TWO = 2;</code>
     */
    public static final int TWO_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Kind valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Kind forNumber(int value) {
      switch (value) {
        case 0: return ZERO;
        case 1: return ONE;
        case 2: return TWO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Kind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Kind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
            public Kind findValueByNumber(int number) {
              return Kind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.confluent.kafka.schemaregistry.rules.WidgetProto2.getDescriptor().getEnumTypes().get(0);
    }

    private static final Kind[] VALUES = values();

    public static Kind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Kind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:io.confluent.kafka.schemaregistry.rules.Kind)
  }

  public interface Widget2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.confluent.kafka.schemaregistry.rules.Widget2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string lastName = 2;</code>
     * @return Whether the lastName field is set.
     */
    boolean hasLastName();
    /**
     * <code>optional string lastName = 2;</code>
     * @return The lastName.
     */
    java.lang.String getLastName();
    /**
     * <code>optional string lastName = 2;</code>
     * @return The bytes for lastName.
     */
    com.google.protobuf.ByteString
        getLastNameBytes();

    /**
     * <code>optional string fullName = 3;</code>
     * @return Whether the fullName field is set.
     */
    boolean hasFullName();
    /**
     * <code>optional string fullName = 3;</code>
     * @return The fullName.
     */
    java.lang.String getFullName();
    /**
     * <code>optional string fullName = 3;</code>
     * @return The bytes for fullName.
     */
    com.google.protobuf.ByteString
        getFullNameBytes();

    /**
     * <code>optional bytes mybytes = 4;</code>
     * @return Whether the mybytes field is set.
     */
    boolean hasMybytes();
    /**
     * <code>optional bytes mybytes = 4;</code>
     * @return The mybytes.
     */
    com.google.protobuf.ByteString getMybytes();

    /**
     * <code>optional int32 myint = 5;</code>
     * @return Whether the myint field is set.
     */
    boolean hasMyint();
    /**
     * <code>optional int32 myint = 5;</code>
     * @return The myint.
     */
    int getMyint();

    /**
     * <code>optional int64 mylong = 6;</code>
     * @return Whether the mylong field is set.
     */
    boolean hasMylong();
    /**
     * <code>optional int64 mylong = 6;</code>
     * @return The mylong.
     */
    long getMylong();

    /**
     * <code>optional float myfloat = 7;</code>
     * @return Whether the myfloat field is set.
     */
    boolean hasMyfloat();
    /**
     * <code>optional float myfloat = 7;</code>
     * @return The myfloat.
     */
    float getMyfloat();

    /**
     * <code>optional double mydouble = 8;</code>
     * @return Whether the mydouble field is set.
     */
    boolean hasMydouble();
    /**
     * <code>optional double mydouble = 8;</code>
     * @return The mydouble.
     */
    double getMydouble();

    /**
     * <code>optional bool myboolean = 9;</code>
     * @return Whether the myboolean field is set.
     */
    boolean hasMyboolean();
    /**
     * <code>optional bool myboolean = 9;</code>
     * @return The myboolean.
     */
    boolean getMyboolean();

    /**
     * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
     * @return Whether the kind field is set.
     */
    boolean hasKind();
    /**
     * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
     * @return The kind.
     */
    io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind getKind();

    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @return A list containing the ssn.
     */
    java.util.List<java.lang.String>
        getSsnList();
    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @return The count of ssn.
     */
    int getSsnCount();
    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the element to return.
     * @return The ssn at the given index.
     */
    java.lang.String getSsn(int index);
    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the value to return.
     * @return The bytes of the ssn at the given index.
     */
    com.google.protobuf.ByteString
        getSsnBytes(int index);

    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    java.util.List<io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> 
        getPiiArrayList();
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiArray(int index);
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    int getPiiArrayCount();
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    java.util.List<? extends io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder> 
        getPiiArrayOrBuilderList();
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder getPiiArrayOrBuilder(
        int index);

    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */
    int getPiiMapCount();
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */
    boolean containsPiiMap(
        java.lang.String key);
    /**
     * Use {@link #getPiiMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
    getPiiMap();
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */
    java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
    getPiiMapMap();
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */

    io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiMapOrDefault(
        java.lang.String key,
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii defaultValue);
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */

    io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiMapOrThrow(
        java.lang.String key);

    /**
     * <code>optional int32 size = 14;</code>
     * @return Whether the size field is set.
     */
    boolean hasSize();
    /**
     * <code>optional int32 size = 14;</code>
     * @return The size.
     */
    int getSize();

    /**
     * <code>optional int32 version = 15;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <code>optional int32 version = 15;</code>
     * @return The version.
     */
    int getVersion();
  }
  /**
   * Protobuf type {@code io.confluent.kafka.schemaregistry.rules.Widget2}
   */
  public static final class Widget2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.confluent.kafka.schemaregistry.rules.Widget2)
      Widget2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Widget2.newBuilder() to construct.
    private Widget2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Widget2() {
      name_ = "";
      lastName_ = "";
      fullName_ = "";
      mybytes_ = com.google.protobuf.ByteString.EMPTY;
      kind_ = 0;
      ssn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      piiArray_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Widget2();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetPiiMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2.class, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object lastName_;
    /**
     * <code>optional string lastName = 2;</code>
     * @return Whether the lastName field is set.
     */
    @java.lang.Override
    public boolean hasLastName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string lastName = 2;</code>
     * @return The lastName.
     */
    @java.lang.Override
    public java.lang.String getLastName() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lastName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string lastName = 2;</code>
     * @return The bytes for lastName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastNameBytes() {
      java.lang.Object ref = lastName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FULLNAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object fullName_;
    /**
     * <code>optional string fullName = 3;</code>
     * @return Whether the fullName field is set.
     */
    @java.lang.Override
    public boolean hasFullName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string fullName = 3;</code>
     * @return The fullName.
     */
    @java.lang.Override
    public java.lang.String getFullName() {
      java.lang.Object ref = fullName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fullName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string fullName = 3;</code>
     * @return The bytes for fullName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFullNameBytes() {
      java.lang.Object ref = fullName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fullName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MYBYTES_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString mybytes_;
    /**
     * <code>optional bytes mybytes = 4;</code>
     * @return Whether the mybytes field is set.
     */
    @java.lang.Override
    public boolean hasMybytes() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bytes mybytes = 4;</code>
     * @return The mybytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMybytes() {
      return mybytes_;
    }

    public static final int MYINT_FIELD_NUMBER = 5;
    private int myint_;
    /**
     * <code>optional int32 myint = 5;</code>
     * @return Whether the myint field is set.
     */
    @java.lang.Override
    public boolean hasMyint() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 myint = 5;</code>
     * @return The myint.
     */
    @java.lang.Override
    public int getMyint() {
      return myint_;
    }

    public static final int MYLONG_FIELD_NUMBER = 6;
    private long mylong_;
    /**
     * <code>optional int64 mylong = 6;</code>
     * @return Whether the mylong field is set.
     */
    @java.lang.Override
    public boolean hasMylong() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int64 mylong = 6;</code>
     * @return The mylong.
     */
    @java.lang.Override
    public long getMylong() {
      return mylong_;
    }

    public static final int MYFLOAT_FIELD_NUMBER = 7;
    private float myfloat_;
    /**
     * <code>optional float myfloat = 7;</code>
     * @return Whether the myfloat field is set.
     */
    @java.lang.Override
    public boolean hasMyfloat() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional float myfloat = 7;</code>
     * @return The myfloat.
     */
    @java.lang.Override
    public float getMyfloat() {
      return myfloat_;
    }

    public static final int MYDOUBLE_FIELD_NUMBER = 8;
    private double mydouble_;
    /**
     * <code>optional double mydouble = 8;</code>
     * @return Whether the mydouble field is set.
     */
    @java.lang.Override
    public boolean hasMydouble() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional double mydouble = 8;</code>
     * @return The mydouble.
     */
    @java.lang.Override
    public double getMydouble() {
      return mydouble_;
    }

    public static final int MYBOOLEAN_FIELD_NUMBER = 9;
    private boolean myboolean_;
    /**
     * <code>optional bool myboolean = 9;</code>
     * @return Whether the myboolean field is set.
     */
    @java.lang.Override
    public boolean hasMyboolean() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool myboolean = 9;</code>
     * @return The myboolean.
     */
    @java.lang.Override
    public boolean getMyboolean() {
      return myboolean_;
    }

    public static final int KIND_FIELD_NUMBER = 10;
    private int kind_;
    /**
     * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
     * @return Whether the kind field is set.
     */
    @java.lang.Override public boolean hasKind() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
     * @return The kind.
     */
    @java.lang.Override public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind getKind() {
      @SuppressWarnings("deprecation")
      io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind result = io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind.valueOf(kind_);
      return result == null ? io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind.ZERO : result;
    }

    public static final int SSN_FIELD_NUMBER = 11;
    private com.google.protobuf.LazyStringList ssn_;
    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @return A list containing the ssn.
     */
    public com.google.protobuf.ProtocolStringList
        getSsnList() {
      return ssn_;
    }
    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @return The count of ssn.
     */
    public int getSsnCount() {
      return ssn_.size();
    }
    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the element to return.
     * @return The ssn at the given index.
     */
    public java.lang.String getSsn(int index) {
      return ssn_.get(index);
    }
    /**
     * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
     * @param index The index of the value to return.
     * @return The bytes of the ssn at the given index.
     */
    public com.google.protobuf.ByteString
        getSsnBytes(int index) {
      return ssn_.getByteString(index);
    }

    public static final int PII_ARRAY_FIELD_NUMBER = 12;
    private java.util.List<io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> piiArray_;
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    @java.lang.Override
    public java.util.List<io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> getPiiArrayList() {
      return piiArray_;
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder> 
        getPiiArrayOrBuilderList() {
      return piiArray_;
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    @java.lang.Override
    public int getPiiArrayCount() {
      return piiArray_.size();
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiArray(int index) {
      return piiArray_.get(index);
    }
    /**
     * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
     */
    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder getPiiArrayOrBuilder(
        int index) {
      return piiArray_.get(index);
    }

    public static final int PII_MAP_FIELD_NUMBER = 13;
    private static final class PiiMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>newDefaultInstance(
                  io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_PiiMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> piiMap_;
    private com.google.protobuf.MapField<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
    internalGetPiiMap() {
      if (piiMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PiiMapDefaultEntryHolder.defaultEntry);
      }
      return piiMap_;
    }

    public int getPiiMapCount() {
      return internalGetPiiMap().getMap().size();
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */

    @java.lang.Override
    public boolean containsPiiMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetPiiMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPiiMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> getPiiMap() {
      return getPiiMapMap();
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> getPiiMapMap() {
      return internalGetPiiMap().getMap();
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */
    @java.lang.Override

    public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiMapOrDefault(
        java.lang.String key,
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> map =
          internalGetPiiMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
     */
    @java.lang.Override

    public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> map =
          internalGetPiiMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SIZE_FIELD_NUMBER = 14;
    private int size_;
    /**
     * <code>optional int32 size = 14;</code>
     * @return Whether the size field is set.
     */
    @java.lang.Override
    public boolean hasSize() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional int32 size = 14;</code>
     * @return The size.
     */
    @java.lang.Override
    public int getSize() {
      return size_;
    }

    public static final int VERSION_FIELD_NUMBER = 15;
    private int version_;
    /**
     * <code>optional int32 version = 15;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional int32 version = 15;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, lastName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fullName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(4, mybytes_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, myint_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt64(6, mylong_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFloat(7, myfloat_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeDouble(8, mydouble_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(9, myboolean_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeEnum(10, kind_);
      }
      for (int i = 0; i < ssn_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, ssn_.getRaw(i));
      }
      for (int i = 0; i < piiArray_.size(); i++) {
        output.writeMessage(12, piiArray_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPiiMap(),
          PiiMapDefaultEntryHolder.defaultEntry,
          13);
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(14, size_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(15, version_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, lastName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fullName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, mybytes_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, myint_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, mylong_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, myfloat_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, mydouble_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, myboolean_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, kind_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ssn_.size(); i++) {
          dataSize += computeStringSizeNoTag(ssn_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSsnList().size();
      }
      for (int i = 0; i < piiArray_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, piiArray_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> entry
           : internalGetPiiMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
        piiMap__ = PiiMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, piiMap__);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, size_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, version_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2)) {
        return super.equals(obj);
      }
      io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 other = (io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasLastName() != other.hasLastName()) return false;
      if (hasLastName()) {
        if (!getLastName()
            .equals(other.getLastName())) return false;
      }
      if (hasFullName() != other.hasFullName()) return false;
      if (hasFullName()) {
        if (!getFullName()
            .equals(other.getFullName())) return false;
      }
      if (hasMybytes() != other.hasMybytes()) return false;
      if (hasMybytes()) {
        if (!getMybytes()
            .equals(other.getMybytes())) return false;
      }
      if (hasMyint() != other.hasMyint()) return false;
      if (hasMyint()) {
        if (getMyint()
            != other.getMyint()) return false;
      }
      if (hasMylong() != other.hasMylong()) return false;
      if (hasMylong()) {
        if (getMylong()
            != other.getMylong()) return false;
      }
      if (hasMyfloat() != other.hasMyfloat()) return false;
      if (hasMyfloat()) {
        if (java.lang.Float.floatToIntBits(getMyfloat())
            != java.lang.Float.floatToIntBits(
                other.getMyfloat())) return false;
      }
      if (hasMydouble() != other.hasMydouble()) return false;
      if (hasMydouble()) {
        if (java.lang.Double.doubleToLongBits(getMydouble())
            != java.lang.Double.doubleToLongBits(
                other.getMydouble())) return false;
      }
      if (hasMyboolean() != other.hasMyboolean()) return false;
      if (hasMyboolean()) {
        if (getMyboolean()
            != other.getMyboolean()) return false;
      }
      if (hasKind() != other.hasKind()) return false;
      if (hasKind()) {
        if (kind_ != other.kind_) return false;
      }
      if (!getSsnList()
          .equals(other.getSsnList())) return false;
      if (!getPiiArrayList()
          .equals(other.getPiiArrayList())) return false;
      if (!internalGetPiiMap().equals(
          other.internalGetPiiMap())) return false;
      if (hasSize() != other.hasSize()) return false;
      if (hasSize()) {
        if (getSize()
            != other.getSize()) return false;
      }
      if (hasVersion() != other.hasVersion()) return false;
      if (hasVersion()) {
        if (getVersion()
            != other.getVersion()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasLastName()) {
        hash = (37 * hash) + LASTNAME_FIELD_NUMBER;
        hash = (53 * hash) + getLastName().hashCode();
      }
      if (hasFullName()) {
        hash = (37 * hash) + FULLNAME_FIELD_NUMBER;
        hash = (53 * hash) + getFullName().hashCode();
      }
      if (hasMybytes()) {
        hash = (37 * hash) + MYBYTES_FIELD_NUMBER;
        hash = (53 * hash) + getMybytes().hashCode();
      }
      if (hasMyint()) {
        hash = (37 * hash) + MYINT_FIELD_NUMBER;
        hash = (53 * hash) + getMyint();
      }
      if (hasMylong()) {
        hash = (37 * hash) + MYLONG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMylong());
      }
      if (hasMyfloat()) {
        hash = (37 * hash) + MYFLOAT_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getMyfloat());
      }
      if (hasMydouble()) {
        hash = (37 * hash) + MYDOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMydouble()));
      }
      if (hasMyboolean()) {
        hash = (37 * hash) + MYBOOLEAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMyboolean());
      }
      if (hasKind()) {
        hash = (37 * hash) + KIND_FIELD_NUMBER;
        hash = (53 * hash) + kind_;
      }
      if (getSsnCount() > 0) {
        hash = (37 * hash) + SSN_FIELD_NUMBER;
        hash = (53 * hash) + getSsnList().hashCode();
      }
      if (getPiiArrayCount() > 0) {
        hash = (37 * hash) + PII_ARRAY_FIELD_NUMBER;
        hash = (53 * hash) + getPiiArrayList().hashCode();
      }
      if (!internalGetPiiMap().getMap().isEmpty()) {
        hash = (37 * hash) + PII_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPiiMap().hashCode();
      }
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize();
      }
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.confluent.kafka.schemaregistry.rules.Widget2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.confluent.kafka.schemaregistry.rules.Widget2)
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetPiiMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutablePiiMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2.class, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2.Builder.class);
      }

      // Construct using io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        lastName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        fullName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        mybytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        myint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        mylong_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        myfloat_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        mydouble_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        myboolean_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        kind_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        ssn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (piiArrayBuilder_ == null) {
          piiArray_ = java.util.Collections.emptyList();
        } else {
          piiArray_ = null;
          piiArrayBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        internalGetMutablePiiMap().clear();
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        version_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_descriptor;
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 getDefaultInstanceForType() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2.getDefaultInstance();
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 build() {
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 buildPartial() {
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 result = new io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lastName_ = lastName_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fullName_ = fullName_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mybytes_ = mybytes_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.myint_ = myint_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.mylong_ = mylong_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.myfloat_ = myfloat_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.mydouble_ = mydouble_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.myboolean_ = myboolean_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          to_bitField0_ |= 0x00000200;
        }
        result.kind_ = kind_;
        if (((bitField0_ & 0x00000400) != 0)) {
          ssn_ = ssn_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.ssn_ = ssn_;
        if (piiArrayBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0)) {
            piiArray_ = java.util.Collections.unmodifiableList(piiArray_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.piiArray_ = piiArray_;
        } else {
          result.piiArray_ = piiArrayBuilder_.build();
        }
        result.piiMap_ = internalGetPiiMap();
        result.piiMap_.makeImmutable();
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.size_ = size_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.version_ = version_;
          to_bitField0_ |= 0x00000800;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2) {
          return mergeFrom((io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 other) {
        if (other == io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLastName()) {
          bitField0_ |= 0x00000002;
          lastName_ = other.lastName_;
          onChanged();
        }
        if (other.hasFullName()) {
          bitField0_ |= 0x00000004;
          fullName_ = other.fullName_;
          onChanged();
        }
        if (other.hasMybytes()) {
          setMybytes(other.getMybytes());
        }
        if (other.hasMyint()) {
          setMyint(other.getMyint());
        }
        if (other.hasMylong()) {
          setMylong(other.getMylong());
        }
        if (other.hasMyfloat()) {
          setMyfloat(other.getMyfloat());
        }
        if (other.hasMydouble()) {
          setMydouble(other.getMydouble());
        }
        if (other.hasMyboolean()) {
          setMyboolean(other.getMyboolean());
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (!other.ssn_.isEmpty()) {
          if (ssn_.isEmpty()) {
            ssn_ = other.ssn_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureSsnIsMutable();
            ssn_.addAll(other.ssn_);
          }
          onChanged();
        }
        if (piiArrayBuilder_ == null) {
          if (!other.piiArray_.isEmpty()) {
            if (piiArray_.isEmpty()) {
              piiArray_ = other.piiArray_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensurePiiArrayIsMutable();
              piiArray_.addAll(other.piiArray_);
            }
            onChanged();
          }
        } else {
          if (!other.piiArray_.isEmpty()) {
            if (piiArrayBuilder_.isEmpty()) {
              piiArrayBuilder_.dispose();
              piiArrayBuilder_ = null;
              piiArray_ = other.piiArray_;
              bitField0_ = (bitField0_ & ~0x00000800);
              piiArrayBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPiiArrayFieldBuilder() : null;
            } else {
              piiArrayBuilder_.addAllMessages(other.piiArray_);
            }
          }
        }
        internalGetMutablePiiMap().mergeFrom(
            other.internalGetPiiMap());
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                lastName_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                fullName_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                mybytes_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 40: {
                myint_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                mylong_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 61: {
                myfloat_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 65: {
                mydouble_ = input.readDouble();
                bitField0_ |= 0x00000080;
                break;
              } // case 65
              case 72: {
                myboolean_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                int tmpRaw = input.readEnum();
                io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind tmpValue =
                    io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(10, tmpRaw);
                } else {
                  kind_ = tmpRaw;
                  bitField0_ |= 0x00000200;
                }
                break;
              } // case 80
              case 90: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureSsnIsMutable();
                ssn_.add(bs);
                break;
              } // case 90
              case 98: {
                io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii m =
                    input.readMessage(
                        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.PARSER,
                        extensionRegistry);
                if (piiArrayBuilder_ == null) {
                  ensurePiiArrayIsMutable();
                  piiArray_.add(m);
                } else {
                  piiArrayBuilder_.addMessage(m);
                }
                break;
              } // case 98
              case 106: {
                com.google.protobuf.MapEntry<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
                piiMap__ = input.readMessage(
                    PiiMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutablePiiMap().getMutableMap().put(
                    piiMap__.getKey(), piiMap__.getValue());
                break;
              } // case 106
              case 112: {
                size_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                version_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1 [(.confluent.field_meta) = { ... }</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lastName_ = "";
      /**
       * <code>optional string lastName = 2;</code>
       * @return Whether the lastName field is set.
       */
      public boolean hasLastName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string lastName = 2;</code>
       * @return The lastName.
       */
      public java.lang.String getLastName() {
        java.lang.Object ref = lastName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            lastName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string lastName = 2;</code>
       * @return The bytes for lastName.
       */
      public com.google.protobuf.ByteString
          getLastNameBytes() {
        java.lang.Object ref = lastName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string lastName = 2;</code>
       * @param value The lastName to set.
       * @return This builder for chaining.
       */
      public Builder setLastName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        lastName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string lastName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lastName_ = getDefaultInstance().getLastName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string lastName = 2;</code>
       * @param value The bytes for lastName to set.
       * @return This builder for chaining.
       */
      public Builder setLastNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        lastName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fullName_ = "";
      /**
       * <code>optional string fullName = 3;</code>
       * @return Whether the fullName field is set.
       */
      public boolean hasFullName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string fullName = 3;</code>
       * @return The fullName.
       */
      public java.lang.String getFullName() {
        java.lang.Object ref = fullName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fullName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string fullName = 3;</code>
       * @return The bytes for fullName.
       */
      public com.google.protobuf.ByteString
          getFullNameBytes() {
        java.lang.Object ref = fullName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fullName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string fullName = 3;</code>
       * @param value The fullName to set.
       * @return This builder for chaining.
       */
      public Builder setFullName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fullName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string fullName = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFullName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fullName_ = getDefaultInstance().getFullName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string fullName = 3;</code>
       * @param value The bytes for fullName to set.
       * @return This builder for chaining.
       */
      public Builder setFullNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fullName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString mybytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes mybytes = 4;</code>
       * @return Whether the mybytes field is set.
       */
      @java.lang.Override
      public boolean hasMybytes() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bytes mybytes = 4;</code>
       * @return The mybytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getMybytes() {
        return mybytes_;
      }
      /**
       * <code>optional bytes mybytes = 4;</code>
       * @param value The mybytes to set.
       * @return This builder for chaining.
       */
      public Builder setMybytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        mybytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes mybytes = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMybytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mybytes_ = getDefaultInstance().getMybytes();
        onChanged();
        return this;
      }

      private int myint_ ;
      /**
       * <code>optional int32 myint = 5;</code>
       * @return Whether the myint field is set.
       */
      @java.lang.Override
      public boolean hasMyint() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 myint = 5;</code>
       * @return The myint.
       */
      @java.lang.Override
      public int getMyint() {
        return myint_;
      }
      /**
       * <code>optional int32 myint = 5;</code>
       * @param value The myint to set.
       * @return This builder for chaining.
       */
      public Builder setMyint(int value) {
        bitField0_ |= 0x00000010;
        myint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 myint = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMyint() {
        bitField0_ = (bitField0_ & ~0x00000010);
        myint_ = 0;
        onChanged();
        return this;
      }

      private long mylong_ ;
      /**
       * <code>optional int64 mylong = 6;</code>
       * @return Whether the mylong field is set.
       */
      @java.lang.Override
      public boolean hasMylong() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int64 mylong = 6;</code>
       * @return The mylong.
       */
      @java.lang.Override
      public long getMylong() {
        return mylong_;
      }
      /**
       * <code>optional int64 mylong = 6;</code>
       * @param value The mylong to set.
       * @return This builder for chaining.
       */
      public Builder setMylong(long value) {
        bitField0_ |= 0x00000020;
        mylong_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 mylong = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMylong() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mylong_ = 0L;
        onChanged();
        return this;
      }

      private float myfloat_ ;
      /**
       * <code>optional float myfloat = 7;</code>
       * @return Whether the myfloat field is set.
       */
      @java.lang.Override
      public boolean hasMyfloat() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional float myfloat = 7;</code>
       * @return The myfloat.
       */
      @java.lang.Override
      public float getMyfloat() {
        return myfloat_;
      }
      /**
       * <code>optional float myfloat = 7;</code>
       * @param value The myfloat to set.
       * @return This builder for chaining.
       */
      public Builder setMyfloat(float value) {
        bitField0_ |= 0x00000040;
        myfloat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float myfloat = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearMyfloat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        myfloat_ = 0F;
        onChanged();
        return this;
      }

      private double mydouble_ ;
      /**
       * <code>optional double mydouble = 8;</code>
       * @return Whether the mydouble field is set.
       */
      @java.lang.Override
      public boolean hasMydouble() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional double mydouble = 8;</code>
       * @return The mydouble.
       */
      @java.lang.Override
      public double getMydouble() {
        return mydouble_;
      }
      /**
       * <code>optional double mydouble = 8;</code>
       * @param value The mydouble to set.
       * @return This builder for chaining.
       */
      public Builder setMydouble(double value) {
        bitField0_ |= 0x00000080;
        mydouble_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double mydouble = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMydouble() {
        bitField0_ = (bitField0_ & ~0x00000080);
        mydouble_ = 0D;
        onChanged();
        return this;
      }

      private boolean myboolean_ ;
      /**
       * <code>optional bool myboolean = 9;</code>
       * @return Whether the myboolean field is set.
       */
      @java.lang.Override
      public boolean hasMyboolean() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool myboolean = 9;</code>
       * @return The myboolean.
       */
      @java.lang.Override
      public boolean getMyboolean() {
        return myboolean_;
      }
      /**
       * <code>optional bool myboolean = 9;</code>
       * @param value The myboolean to set.
       * @return This builder for chaining.
       */
      public Builder setMyboolean(boolean value) {
        bitField0_ |= 0x00000100;
        myboolean_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool myboolean = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearMyboolean() {
        bitField0_ = (bitField0_ & ~0x00000100);
        myboolean_ = false;
        onChanged();
        return this;
      }

      private int kind_ = 0;
      /**
       * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
       * @return Whether the kind field is set.
       */
      @java.lang.Override public boolean hasKind() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
       * @return The kind.
       */
      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind getKind() {
        @SuppressWarnings("deprecation")
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind result = io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind.valueOf(kind_);
        return result == null ? io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind.ZERO : result;
      }
      /**
       * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(io.confluent.kafka.schemaregistry.rules.WidgetProto2.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .io.confluent.kafka.schemaregistry.rules.Kind kind = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000200);
        kind_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList ssn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSsnIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          ssn_ = new com.google.protobuf.LazyStringArrayList(ssn_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @return A list containing the ssn.
       */
      public com.google.protobuf.ProtocolStringList
          getSsnList() {
        return ssn_.getUnmodifiableView();
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @return The count of ssn.
       */
      public int getSsnCount() {
        return ssn_.size();
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @param index The index of the element to return.
       * @return The ssn at the given index.
       */
      public java.lang.String getSsn(int index) {
        return ssn_.get(index);
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @param index The index of the value to return.
       * @return The bytes of the ssn at the given index.
       */
      public com.google.protobuf.ByteString
          getSsnBytes(int index) {
        return ssn_.getByteString(index);
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @param index The index to set the value at.
       * @param value The ssn to set.
       * @return This builder for chaining.
       */
      public Builder setSsn(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSsnIsMutable();
        ssn_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @param value The ssn to add.
       * @return This builder for chaining.
       */
      public Builder addSsn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSsnIsMutable();
        ssn_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @param values The ssn to add.
       * @return This builder for chaining.
       */
      public Builder addAllSsn(
          java.lang.Iterable<java.lang.String> values) {
        ensureSsnIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ssn_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearSsn() {
        ssn_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ssn = 11 [(.confluent.field_meta) = { ... }</code>
       * @param value The bytes of the ssn to add.
       * @return This builder for chaining.
       */
      public Builder addSsnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSsnIsMutable();
        ssn_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> piiArray_ =
        java.util.Collections.emptyList();
      private void ensurePiiArrayIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          piiArray_ = new java.util.ArrayList<io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>(piiArray_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder, io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder> piiArrayBuilder_;

      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public java.util.List<io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> getPiiArrayList() {
        if (piiArrayBuilder_ == null) {
          return java.util.Collections.unmodifiableList(piiArray_);
        } else {
          return piiArrayBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public int getPiiArrayCount() {
        if (piiArrayBuilder_ == null) {
          return piiArray_.size();
        } else {
          return piiArrayBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiArray(int index) {
        if (piiArrayBuilder_ == null) {
          return piiArray_.get(index);
        } else {
          return piiArrayBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder setPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii value) {
        if (piiArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiiArrayIsMutable();
          piiArray_.set(index, value);
          onChanged();
        } else {
          piiArrayBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder setPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder builderForValue) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.set(index, builderForValue.build());
          onChanged();
        } else {
          piiArrayBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder addPiiArray(io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii value) {
        if (piiArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiiArrayIsMutable();
          piiArray_.add(value);
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder addPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii value) {
        if (piiArrayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePiiArrayIsMutable();
          piiArray_.add(index, value);
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder addPiiArray(
          io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder builderForValue) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.add(builderForValue.build());
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder addPiiArray(
          int index, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder builderForValue) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.add(index, builderForValue.build());
          onChanged();
        } else {
          piiArrayBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder addAllPiiArray(
          java.lang.Iterable<? extends io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> values) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, piiArray_);
          onChanged();
        } else {
          piiArrayBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder clearPiiArray() {
        if (piiArrayBuilder_ == null) {
          piiArray_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          piiArrayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public Builder removePiiArray(int index) {
        if (piiArrayBuilder_ == null) {
          ensurePiiArrayIsMutable();
          piiArray_.remove(index);
          onChanged();
        } else {
          piiArrayBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder getPiiArrayBuilder(
          int index) {
        return getPiiArrayFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder getPiiArrayOrBuilder(
          int index) {
        if (piiArrayBuilder_ == null) {
          return piiArray_.get(index);  } else {
          return piiArrayBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public java.util.List<? extends io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder> 
           getPiiArrayOrBuilderList() {
        if (piiArrayBuilder_ != null) {
          return piiArrayBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(piiArray_);
        }
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder addPiiArrayBuilder() {
        return getPiiArrayFieldBuilder().addBuilder(
            io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.getDefaultInstance());
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder addPiiArrayBuilder(
          int index) {
        return getPiiArrayFieldBuilder().addBuilder(
            index, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.getDefaultInstance());
      }
      /**
       * <code>repeated .io.confluent.kafka.schemaregistry.rules.Pii pii_array = 12;</code>
       */
      public java.util.List<io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder> 
           getPiiArrayBuilderList() {
        return getPiiArrayFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder, io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder> 
          getPiiArrayFieldBuilder() {
        if (piiArrayBuilder_ == null) {
          piiArrayBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder, io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder>(
                  piiArray_,
                  ((bitField0_ & 0x00000800) != 0),
                  getParentForChildren(),
                  isClean());
          piiArray_ = null;
        }
        return piiArrayBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> piiMap_;
      private com.google.protobuf.MapField<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
      internalGetPiiMap() {
        if (piiMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PiiMapDefaultEntryHolder.defaultEntry);
        }
        return piiMap_;
      }
      private com.google.protobuf.MapField<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
      internalGetMutablePiiMap() {
        onChanged();;
        if (piiMap_ == null) {
          piiMap_ = com.google.protobuf.MapField.newMapField(
              PiiMapDefaultEntryHolder.defaultEntry);
        }
        if (!piiMap_.isMutable()) {
          piiMap_ = piiMap_.copy();
        }
        return piiMap_;
      }

      public int getPiiMapCount() {
        return internalGetPiiMap().getMap().size();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
       */

      @java.lang.Override
      public boolean containsPiiMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetPiiMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPiiMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> getPiiMap() {
        return getPiiMapMap();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> getPiiMapMap() {
        return internalGetPiiMap().getMap();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
       */
      @java.lang.Override

      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiMapOrDefault(
          java.lang.String key,
          io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> map =
            internalGetPiiMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
       */
      @java.lang.Override

      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getPiiMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> map =
            internalGetPiiMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPiiMap() {
        internalGetMutablePiiMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
       */

      public Builder removePiiMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutablePiiMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii>
      getMutablePiiMap() {
        return internalGetMutablePiiMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
       */
      public Builder putPiiMap(
          java.lang.String key,
          io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutablePiiMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .io.confluent.kafka.schemaregistry.rules.Pii&gt; pii_map = 13;</code>
       */

      public Builder putAllPiiMap(
          java.util.Map<java.lang.String, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii> values) {
        internalGetMutablePiiMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int size_ ;
      /**
       * <code>optional int32 size = 14;</code>
       * @return Whether the size field is set.
       */
      @java.lang.Override
      public boolean hasSize() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional int32 size = 14;</code>
       * @return The size.
       */
      @java.lang.Override
      public int getSize() {
        return size_;
      }
      /**
       * <code>optional int32 size = 14;</code>
       * @param value The size to set.
       * @return This builder for chaining.
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00002000;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 size = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00002000);
        size_ = 0;
        onChanged();
        return this;
      }

      private int version_ ;
      /**
       * <code>optional int32 version = 15;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional int32 version = 15;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional int32 version = 15;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00004000;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 version = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00004000);
        version_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.confluent.kafka.schemaregistry.rules.Widget2)
    }

    // @@protoc_insertion_point(class_scope:io.confluent.kafka.schemaregistry.rules.Widget2)
    private static final io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2();
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Widget2>
        PARSER = new com.google.protobuf.AbstractParser<Widget2>() {
      @java.lang.Override
      public Widget2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Widget2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Widget2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Widget2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PiiOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.confluent.kafka.schemaregistry.rules.Pii)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
     * @return Whether the pii field is set.
     */
    boolean hasPii();
    /**
     * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The pii.
     */
    java.lang.String getPii();
    /**
     * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The bytes for pii.
     */
    com.google.protobuf.ByteString
        getPiiBytes();
  }
  /**
   * Protobuf type {@code io.confluent.kafka.schemaregistry.rules.Pii}
   */
  public static final class Pii extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.confluent.kafka.schemaregistry.rules.Pii)
      PiiOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pii.newBuilder() to construct.
    private Pii(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pii() {
      pii_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Pii();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Pii_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Pii_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.class, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder.class);
    }

    private int bitField0_;
    public static final int PII_FIELD_NUMBER = 1;
    private volatile java.lang.Object pii_;
    /**
     * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
     * @return Whether the pii field is set.
     */
    @java.lang.Override
    public boolean hasPii() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The pii.
     */
    @java.lang.Override
    public java.lang.String getPii() {
      java.lang.Object ref = pii_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pii_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
     * @return The bytes for pii.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPiiBytes() {
      java.lang.Object ref = pii_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pii_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, pii_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, pii_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii)) {
        return super.equals(obj);
      }
      io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii other = (io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii) obj;

      if (hasPii() != other.hasPii()) return false;
      if (hasPii()) {
        if (!getPii()
            .equals(other.getPii())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPii()) {
        hash = (37 * hash) + PII_FIELD_NUMBER;
        hash = (53 * hash) + getPii().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.confluent.kafka.schemaregistry.rules.Pii}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.confluent.kafka.schemaregistry.rules.Pii)
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.PiiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Pii_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Pii_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.class, io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.Builder.class);
      }

      // Construct using io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pii_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.internal_static_io_confluent_kafka_schemaregistry_rules_Pii_descriptor;
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getDefaultInstanceForType() {
        return io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.getDefaultInstance();
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii build() {
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii buildPartial() {
        io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii result = new io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pii_ = pii_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii) {
          return mergeFrom((io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii other) {
        if (other == io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii.getDefaultInstance()) return this;
        if (other.hasPii()) {
          bitField0_ |= 0x00000001;
          pii_ = other.pii_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                pii_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object pii_ = "";
      /**
       * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
       * @return Whether the pii field is set.
       */
      public boolean hasPii() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
       * @return The pii.
       */
      public java.lang.String getPii() {
        java.lang.Object ref = pii_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pii_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
       * @return The bytes for pii.
       */
      public com.google.protobuf.ByteString
          getPiiBytes() {
        java.lang.Object ref = pii_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pii_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
       * @param value The pii to set.
       * @return This builder for chaining.
       */
      public Builder setPii(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pii_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearPii() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pii_ = getDefaultInstance().getPii();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pii = 1 [(.confluent.field_meta) = { ... }</code>
       * @param value The bytes for pii to set.
       * @return This builder for chaining.
       */
      public Builder setPiiBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pii_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.confluent.kafka.schemaregistry.rules.Pii)
    }

    // @@protoc_insertion_point(class_scope:io.confluent.kafka.schemaregistry.rules.Pii)
    private static final io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii();
    }

    public static io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Pii>
        PARSER = new com.google.protobuf.AbstractParser<Pii>() {
      @java.lang.Override
      public Pii parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Pii> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pii> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.confluent.kafka.schemaregistry.rules.WidgetProto2.Pii getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_PiiMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_PiiMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_confluent_kafka_schemaregistry_rules_Pii_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_confluent_kafka_schemaregistry_rules_Pii_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rWidget2.proto\022\'io.confluent.kafka.sche" +
      "maregistry.rules\032\024confluent/meta.proto\"\242" +
      "\004\n\007Widget2\022!\n\004name\030\001 \002(\tB\023\202D\005\032\003PII\202D\010\032\006P" +
      "UBLIC\022\020\n\010lastName\030\002 \001(\t\022\020\n\010fullName\030\003 \001(" +
      "\t\022\017\n\007mybytes\030\004 \001(\014\022\r\n\005myint\030\005 \001(\005\022\016\n\006myl" +
      "ong\030\006 \001(\003\022\017\n\007myfloat\030\007 \001(\002\022\020\n\010mydouble\030\010" +
      " \001(\001\022\021\n\tmyboolean\030\t \001(\010\022;\n\004kind\030\n \001(\0162-." +
      "io.confluent.kafka.schemaregistry.rules." +
      "Kind\022!\n\003ssn\030\013 \003(\tB\024\202D\005\032\003PII\202D\t\032\007PRIVATE\022" +
      "?\n\tpii_array\030\014 \003(\0132,.io.confluent.kafka." +
      "schemaregistry.rules.Pii\022M\n\007pii_map\030\r \003(" +
      "\0132<.io.confluent.kafka.schemaregistry.ru" +
      "les.Widget2.PiiMapEntry\022\014\n\004size\030\016 \001(\005\022\017\n" +
      "\007version\030\017 \001(\005\032[\n\013PiiMapEntry\022\013\n\003key\030\001 \001" +
      "(\t\022;\n\005value\030\002 \001(\0132,.io.confluent.kafka.s" +
      "chemaregistry.rules.Pii:\0028\001\"\034\n\003Pii\022\025\n\003pi" +
      "i\030\001 \001(\tB\010\202D\005\032\003PII*\"\n\004Kind\022\010\n\004ZERO\020\000\022\007\n\003O" +
      "NE\020\001\022\007\n\003TWO\020\002B9\n\'io.confluent.kafka.sche" +
      "maregistry.rulesB\014WidgetProto2P\000"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.confluent.protobuf.MetaProto.getDescriptor(),
        });
    internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_descriptor,
        new java.lang.String[] { "Name", "LastName", "FullName", "Mybytes", "Myint", "Mylong", "Myfloat", "Mydouble", "Myboolean", "Kind", "Ssn", "PiiArray", "PiiMap", "Size", "Version", });
    internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_PiiMapEntry_descriptor =
      internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_descriptor.getNestedTypes().get(0);
    internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_PiiMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_confluent_kafka_schemaregistry_rules_Widget2_PiiMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_io_confluent_kafka_schemaregistry_rules_Pii_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_io_confluent_kafka_schemaregistry_rules_Pii_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_confluent_kafka_schemaregistry_rules_Pii_descriptor,
        new java.lang.String[] { "Pii", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.confluent.protobuf.MetaProto.fieldMeta);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    io.confluent.protobuf.MetaProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
