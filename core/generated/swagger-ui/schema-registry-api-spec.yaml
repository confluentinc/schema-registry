---
swagger: "2.0"
info:
  version: "v1"
  title: "Confluent Schema Registry"
schemes:
- "http"
- "https"
paths:
  /:
    get:
      summary: "Schema Registry Root Resource"
      description: "The Root resource is a no-op."
      operationId: "get"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
    post:
      operationId: "post"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "string"
  /compatibility/subjects/{subject}/versions/{version}:
    post:
      summary: "Test input schema against a particular version of a subject's schema\
        \ for compatibility."
      description: "the compatibility level applied for the check is the configured\
        \ compatibility level for the subject (http:get:: /config/(string: subject)).\
        \ If this subject's compatibility level was never changed, then the global\
        \ compatibility level applies (http:get:: /config)."
      operationId: "lookUpSchemaUnderSubject"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: false
        type: "string"
      - name: "Accept"
        in: "header"
        required: false
        type: "string"
      - name: "subject"
        in: "path"
        description: "Subject of the schema version against which compatibility is\
          \ to be tested"
        required: true
        type: "string"
      - name: "version"
        in: "path"
        description: "Version of the subject's schema against which compatibility\
          \ is to be tested. Valid values for versionId are between [1,2^31-1] or\
          \ the string \"latest\".\"latest\" checks compatibility of the input schema\
          \ with the last registered schema under the specified subject"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CompatibilityCheckResponse"
        404:
          description: "Error code 40401 -- Subject not found\nError code 40402 --\
            \ Version not found"
        422:
          description: "Error code 42201 -- Invalid Avro schema\nError code 42202\
            \ -- Invalid version"
        500:
          description: "Error code 50001 -- Error in the backend data store"
  /config:
    get:
      operationId: "getTopLevelConfig"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Config"
    put:
      operationId: "updateTopLevelConfig"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConfigUpdateRequest"
  /config/{subject}:
    get:
      operationId: "getSubjectLevelConfig"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Config"
    put:
      operationId: "updateSubjectLevelConfig"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConfigUpdateRequest"
  /mode:
    get:
      operationId: "getTopLevelMode"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ModeGetResponse"
    put:
      operationId: "updateTopLevelMode"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ModeUpdateRequest"
  /mode/{subject}:
    get:
      operationId: "getMode"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ModeGetResponse"
    put:
      operationId: "updateMode"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ModeUpdateRequest"
  /schemas/ids/{id}:
    get:
      operationId: "getSchema"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/SchemaString"
  /subjects:
    get:
      operationId: "list"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "string"
            uniqueItems: true
  /subjects/{subject}:
    post:
      operationId: "lookUpSchemaUnderSubject"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      - name: "deleted"
        in: "query"
        required: false
        type: "boolean"
      responses:
        default:
          description: "successful operation"
    delete:
      operationId: "deleteSubject"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /subjects/{subject}/versions:
    get:
      operationId: "list"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "integer"
              format: "int32"
    post:
      operationId: "register"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /subjects/{subject}/versions/{version}:
    get:
      operationId: "getSchema"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      - name: "version"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Schema"
    delete:
      operationId: "deleteSchemaVersion"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      - name: "version"
        in: "path"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /subjects/{subject}/versions/{version}/schema:
    get:
      operationId: "getSchemaOnly"
      consumes:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json"
      - "application/json"
      - "application/octet-stream"
      produces:
      - "application/vnd.schemaregistry.v1+json"
      - "application/vnd.schemaregistry+json; qs=0.9"
      - "application/json; qs=0.5"
      parameters:
      - name: "subject"
        in: "path"
        required: true
        type: "string"
      - name: "version"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
definitions:
  CompatibilityCheckResponse:
    type: "object"
    properties:
      is_compatible:
        type: "boolean"
  Config:
    type: "object"
    properties:
      compatibilityLevel:
        type: "string"
  ConfigUpdateRequest:
    type: "object"
    properties:
      compatibility:
        type: "string"
  ModeGetResponse:
    type: "object"
    properties:
      mode:
        type: "string"
  ModeUpdateRequest:
    type: "object"
    properties:
      mode:
        type: "string"
  Schema:
    type: "object"
    properties:
      subject:
        type: "string"
      version:
        type: "integer"
        format: "int32"
      id:
        type: "integer"
        format: "int32"
      schema:
        type: "string"
  SchemaString:
    type: "object"
    properties:
      schema:
        type: "string"
