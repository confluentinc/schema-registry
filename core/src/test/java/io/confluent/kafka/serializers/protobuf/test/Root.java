// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: root.proto

package io.confluent.kafka.serializers.protobuf.test;

public final class Root {
  private Root() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ReferrerMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.confluent.kafka.serializers.protobuf.test.ReferrerMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string root_id = 1;</code>
     * @return The rootId.
     */
    java.lang.String getRootId();
    /**
     * <code>string root_id = 1;</code>
     * @return The bytes for rootId.
     */
    com.google.protobuf.ByteString
        getRootIdBytes();

    /**
     * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
     * @return Whether the ref field is set.
     */
    boolean hasRef();
    /**
     * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
     * @return The ref.
     */
    io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage getRef();
    /**
     * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
     */
    io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessageOrBuilder getRefOrBuilder();
  }
  /**
   * Protobuf type {@code io.confluent.kafka.serializers.protobuf.test.ReferrerMessage}
   */
  public  static final class ReferrerMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.confluent.kafka.serializers.protobuf.test.ReferrerMessage)
      ReferrerMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReferrerMessage.newBuilder() to construct.
    private ReferrerMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReferrerMessage() {
      rootId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReferrerMessage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReferrerMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              rootId_ = s;
              break;
            }
            case 18: {
              io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.Builder subBuilder = null;
              if (ref_ != null) {
                subBuilder = ref_.toBuilder();
              }
              ref_ = input.readMessage(io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ref_);
                ref_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.confluent.kafka.serializers.protobuf.test.Root.internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.confluent.kafka.serializers.protobuf.test.Root.internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage.class, io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage.Builder.class);
    }

    public static final int ROOT_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object rootId_;
    /**
     * <code>string root_id = 1;</code>
     * @return The rootId.
     */
    public java.lang.String getRootId() {
      java.lang.Object ref = rootId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        rootId_ = s;
        return s;
      }
    }
    /**
     * <code>string root_id = 1;</code>
     * @return The bytes for rootId.
     */
    public com.google.protobuf.ByteString
        getRootIdBytes() {
      java.lang.Object ref = rootId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rootId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REF_FIELD_NUMBER = 2;
    private io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage ref_;
    /**
     * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
     * @return Whether the ref field is set.
     */
    public boolean hasRef() {
      return ref_ != null;
    }
    /**
     * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
     * @return The ref.
     */
    public io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage getRef() {
      return ref_ == null ? io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.getDefaultInstance() : ref_;
    }
    /**
     * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
     */
    public io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessageOrBuilder getRefOrBuilder() {
      return getRef();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRootIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, rootId_);
      }
      if (ref_ != null) {
        output.writeMessage(2, getRef());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRootIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, rootId_);
      }
      if (ref_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRef());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage)) {
        return super.equals(obj);
      }
      io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage other = (io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage) obj;

      if (!getRootId()
          .equals(other.getRootId())) return false;
      if (hasRef() != other.hasRef()) return false;
      if (hasRef()) {
        if (!getRef()
            .equals(other.getRef())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROOT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRootId().hashCode();
      if (hasRef()) {
        hash = (37 * hash) + REF_FIELD_NUMBER;
        hash = (53 * hash) + getRef().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.confluent.kafka.serializers.protobuf.test.ReferrerMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.confluent.kafka.serializers.protobuf.test.ReferrerMessage)
        io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.confluent.kafka.serializers.protobuf.test.Root.internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.confluent.kafka.serializers.protobuf.test.Root.internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage.class, io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage.Builder.class);
      }

      // Construct using io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        rootId_ = "";

        if (refBuilder_ == null) {
          ref_ = null;
        } else {
          ref_ = null;
          refBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.confluent.kafka.serializers.protobuf.test.Root.internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_descriptor;
      }

      @java.lang.Override
      public io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage getDefaultInstanceForType() {
        return io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage.getDefaultInstance();
      }

      @java.lang.Override
      public io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage build() {
        io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage buildPartial() {
        io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage result = new io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage(this);
        result.rootId_ = rootId_;
        if (refBuilder_ == null) {
          result.ref_ = ref_;
        } else {
          result.ref_ = refBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage) {
          return mergeFrom((io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage other) {
        if (other == io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage.getDefaultInstance()) return this;
        if (!other.getRootId().isEmpty()) {
          rootId_ = other.rootId_;
          onChanged();
        }
        if (other.hasRef()) {
          mergeRef(other.getRef());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object rootId_ = "";
      /**
       * <code>string root_id = 1;</code>
       * @return The rootId.
       */
      public java.lang.String getRootId() {
        java.lang.Object ref = rootId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          rootId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string root_id = 1;</code>
       * @return The bytes for rootId.
       */
      public com.google.protobuf.ByteString
          getRootIdBytes() {
        java.lang.Object ref = rootId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rootId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string root_id = 1;</code>
       * @param value The rootId to set.
       * @return This builder for chaining.
       */
      public Builder setRootId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rootId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string root_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRootId() {
        
        rootId_ = getDefaultInstance().getRootId();
        onChanged();
        return this;
      }
      /**
       * <code>string root_id = 1;</code>
       * @param value The bytes for rootId to set.
       * @return This builder for chaining.
       */
      public Builder setRootIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        rootId_ = value;
        onChanged();
        return this;
      }

      private io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage ref_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage, io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.Builder, io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessageOrBuilder> refBuilder_;
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       * @return Whether the ref field is set.
       */
      public boolean hasRef() {
        return refBuilder_ != null || ref_ != null;
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       * @return The ref.
       */
      public io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage getRef() {
        if (refBuilder_ == null) {
          return ref_ == null ? io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.getDefaultInstance() : ref_;
        } else {
          return refBuilder_.getMessage();
        }
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       */
      public Builder setRef(io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage value) {
        if (refBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ref_ = value;
          onChanged();
        } else {
          refBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       */
      public Builder setRef(
          io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.Builder builderForValue) {
        if (refBuilder_ == null) {
          ref_ = builderForValue.build();
          onChanged();
        } else {
          refBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       */
      public Builder mergeRef(io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage value) {
        if (refBuilder_ == null) {
          if (ref_ != null) {
            ref_ =
              io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.newBuilder(ref_).mergeFrom(value).buildPartial();
          } else {
            ref_ = value;
          }
          onChanged();
        } else {
          refBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       */
      public Builder clearRef() {
        if (refBuilder_ == null) {
          ref_ = null;
          onChanged();
        } else {
          ref_ = null;
          refBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       */
      public io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.Builder getRefBuilder() {
        
        onChanged();
        return getRefFieldBuilder().getBuilder();
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       */
      public io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessageOrBuilder getRefOrBuilder() {
        if (refBuilder_ != null) {
          return refBuilder_.getMessageOrBuilder();
        } else {
          return ref_ == null ?
              io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.getDefaultInstance() : ref_;
        }
      }
      /**
       * <code>.io.confluent.kafka.serializers.protobuf.test.ReferencedMessage ref = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage, io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.Builder, io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessageOrBuilder> 
          getRefFieldBuilder() {
        if (refBuilder_ == null) {
          refBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage, io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessage.Builder, io.confluent.kafka.serializers.protobuf.test.Ref.ReferencedMessageOrBuilder>(
                  getRef(),
                  getParentForChildren(),
                  isClean());
          ref_ = null;
        }
        return refBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.confluent.kafka.serializers.protobuf.test.ReferrerMessage)
    }

    // @@protoc_insertion_point(class_scope:io.confluent.kafka.serializers.protobuf.test.ReferrerMessage)
    private static final io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage();
    }

    public static io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReferrerMessage>
        PARSER = new com.google.protobuf.AbstractParser<ReferrerMessage>() {
      @java.lang.Override
      public ReferrerMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReferrerMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReferrerMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReferrerMessage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.confluent.kafka.serializers.protobuf.test.Root.ReferrerMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nroot.proto\022,io.confluent.kafka.seriali" +
      "zers.protobuf.test\032\tref.proto\"p\n\017Referre" +
      "rMessage\022\017\n\007root_id\030\001 \001(\t\022L\n\003ref\030\002 \001(\0132?" +
      ".io.confluent.kafka.serializers.protobuf" +
      ".test.ReferencedMessageb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.confluent.kafka.serializers.protobuf.test.Ref.getDescriptor(),
        });
    internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_confluent_kafka_serializers_protobuf_test_ReferrerMessage_descriptor,
        new java.lang.String[] { "RootId", "Ref", });
    io.confluent.kafka.serializers.protobuf.test.Ref.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
